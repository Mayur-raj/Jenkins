<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="QKSRVSH04" ignored="0" name="Default test" tests="6" failures="0" timestamp="2021-04-23T15:29:08 IST" time="0.058" errors="0">
  <testcase name="@BeforeSuite createResultFolder" time="-1.619171948398E9" classname="QualityKioskTraining.BankingAssessment.BankAccountTestCase">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;RequestID&amp;apos; is required by BeforeSuite on method createResultFolder but has not been marked @Optional or defined
in C:\Users\q6730\AppData\Local\Temp\223\testng-eclipse--1098934347\testng-customsuite.xml">
      <![CDATA[org.testng.TestNGException: 
Parameter 'RequestID' is required by BeforeSuite on method createResultFolder but has not been marked @Optional or defined
in C:\Users\q6730\AppData\Local\Temp\223\testng-eclipse--1098934347\testng-customsuite.xml
at org.testng.internal.Parameters.createParams(Parameters.java:268)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:356)
at org.testng.internal.Parameters.createParameters(Parameters.java:700)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:166)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:301)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:327)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeSuite createResultFolder -->
  <testcase name="@BeforeClass init" time="-1.619171948423E9" classname="QualityKioskTraining.BankingAssessment.BankAccountTestCase">
    <skipped/>
  </testcase> <!-- @BeforeClass init -->
  <testcase name="@BeforeMethod ReinitialiseRes" time="-1.619171948439E9" classname="QualityKioskTraining.BankingAssessment.BankAccountTestCase">
    <skipped/>
  </testcase> <!-- @BeforeMethod ReinitialiseRes -->
  <testcase name="@AfterMethod clearResult" time="-1.619171948444E9" classname="QualityKioskTraining.BankingAssessment.BankAccountTestCase">
    <skipped/>
  </testcase> <!-- @AfterMethod clearResult -->
  <testcase name="@BeforeMethod ReinitialiseRes" time="-1.619171948447E9" classname="QualityKioskTraining.BankingAssessment.BankAccountTestCase">
    <skipped/>
  </testcase> <!-- @BeforeMethod ReinitialiseRes -->
  <testcase name="@AfterMethod clearResult" time="-1.61917194845E9" classname="QualityKioskTraining.BankingAssessment.BankAccountTestCase">
    <skipped/>
  </testcase> <!-- @AfterMethod clearResult -->
  <testcase name="@BeforeMethod ReinitialiseRes" time="-1.619171948451E9" classname="QualityKioskTraining.BankingAssessment.BankAccountTestCase">
    <skipped/>
  </testcase> <!-- @BeforeMethod ReinitialiseRes -->
  <testcase name="@AfterMethod clearResult" time="-1.619171948454E9" classname="QualityKioskTraining.BankingAssessment.BankAccountTestCase">
    <skipped/>
  </testcase> <!-- @AfterMethod clearResult -->
  <testcase name="@BeforeMethod ReinitialiseRes" time="-1.619171948455E9" classname="QualityKioskTraining.BankingAssessment.BankAccountTestCase">
    <skipped/>
  </testcase> <!-- @BeforeMethod ReinitialiseRes -->
  <testcase name="@AfterMethod clearResult" time="-1.619171948458E9" classname="QualityKioskTraining.BankingAssessment.BankAccountTestCase">
    <skipped/>
  </testcase> <!-- @AfterMethod clearResult -->
  <testcase name="@BeforeMethod ReinitialiseRes" time="-1.619171948459E9" classname="QualityKioskTraining.BankingAssessment.BankAccountTestCase">
    <skipped/>
  </testcase> <!-- @BeforeMethod ReinitialiseRes -->
  <testcase name="@AfterMethod clearResult" time="-1.619171948462E9" classname="QualityKioskTraining.BankingAssessment.BankAccountTestCase">
    <skipped/>
  </testcase> <!-- @AfterMethod clearResult -->
  <testcase name="@BeforeMethod ReinitialiseRes" time="-1.619171948464E9" classname="QualityKioskTraining.BankingAssessment.BankAccountTestCase">
    <skipped/>
  </testcase> <!-- @BeforeMethod ReinitialiseRes -->
  <testcase name="@AfterMethod clearResult" time="-1.619171948466E9" classname="QualityKioskTraining.BankingAssessment.BankAccountTestCase">
    <skipped/>
  </testcase> <!-- @AfterMethod clearResult -->
  <testcase name="@AfterClass tearDown" time="-1.619171948467E9" classname="QualityKioskTraining.BankingAssessment.BankAccountTestCase">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase name="openingofAcc" time="0.0" classname="QualityKioskTraining.BankingAssessment.BankAccountTestCase">
    <skipped/>
  </testcase> <!-- openingofAcc -->
  <testcase name="InitialBalance" time="0.0" classname="QualityKioskTraining.BankingAssessment.BankAccountTestCase">
    <skipped/>
  </testcase> <!-- InitialBalance -->
  <testcase name="DepositMoney" time="0.0" classname="QualityKioskTraining.BankingAssessment.BankAccountTestCase">
    <skipped/>
  </testcase> <!-- DepositMoney -->
  <testcase name="withDraw" time="0.0" classname="QualityKioskTraining.BankingAssessment.BankAccountTestCase">
    <skipped/>
  </testcase> <!-- withDraw -->
  <testcase name="SavingAcc" time="0.0" classname="QualityKioskTraining.BankingAssessment.BankAccountTestCase">
    <skipped/>
  </testcase> <!-- SavingAcc -->
  <testcase name="salaryAccount" time="0.0" classname="QualityKioskTraining.BankingAssessment.BankAccountTestCase">
    <skipped/>
  </testcase> <!-- salaryAccount -->
</testsuite> <!-- Default test -->
